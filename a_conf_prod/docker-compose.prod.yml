services:
  traefik:
    image: traefik:v3.0
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytls.acme.httpchallenge=true"
      - "--certificatesresolvers.mytls.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.mytls.acme.email=ton@mail.com"
      - "--certificatesresolvers.mytls.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - webnet

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cms_data_storytelling
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - webnet

  backend:
    build:
      context: ./Backend_CMS
      dockerfile: Dockerfile.prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=mytls"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
    networks:
      - webnet

  frontend:
    build:
      context: ./Frontend_CMS
      dockerfile: Dockerfile.prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=mytls"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - webnet

volumes:
  db_data:

networks:
  webnet:
    driver: bridge
